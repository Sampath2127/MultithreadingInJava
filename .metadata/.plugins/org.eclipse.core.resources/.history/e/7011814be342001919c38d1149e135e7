package com.lovecoding.producerconsumer;

import java.util.Random;

public class Main {

	public static void main(String[] args) {

	}

}

class Message{
	
	private String message;
	private boolean empty=true;
	
	public synchronized String read(){
		while(empty){
			
		}
		empty=true;
		return message;
	}
	
	public synchronized void write(String message){
		while(!empty){
			
		}
		empty=false;
		this.message=message;
	}
}

class Writer implements Runnable{

	private Message message;
	
	public Writer(Message message){
		this.message=message;
	}
	@Override
	public void run() {
		String messages[]={
				"hello message 1",
				"hello message 2",
				"hello message 3",
				"hello message 4"
		};
		Random random=new Random();
		
		for(int i=0;i<messages.length; i++){
			message.write(messages[1]);
			try{
				Thread.sleep(2000);
			}catch(InterruptedException ex){
				System.out.println("Thread is INterrupted");
			}
		}
		message.write("finished..!");
				
	}	
}

class Reader implements Runnable{
	
	private Message message;
	
	public Reader(Message message){
		this.message=message;
	}
	@Override
	public void run() {
		Random random=new Random();
		for(String latestMessage=message.read(); !latestMessage.equals("finished");
				latestMessage = message.read()){
			System.out.println(latestMessage);
			try{
				
			}catch(InterruptedException ex){
				System.out.println("Thread Interrupted..!");
			}
		}
	}
}